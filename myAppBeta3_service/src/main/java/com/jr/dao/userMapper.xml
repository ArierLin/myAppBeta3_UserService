<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE  mapper  PUBLIC  "-//mybatis.org//DTD  Mapper  3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jr.dao.UserMapper">

	<resultMap type="User" id="userMap">
		<id property="id" column="id"></id>
		<result property="userName" column="user_name"/>
		<result property="password" column="password"/>
		<result property="isDel" column="is_del"/>
		<result property="createTime" column="create_time"/>
		<result property="updateTime" column="update_time"/>
	</resultMap>
	
	<resultMap type="User" id="userRoleMap" extends="userMap">
		<collection property="roles" ofType="Role">
			<id property="id" column="roleId"/>
			<result property="name" column="roleName"/>
			<result property="type" column="roleType"/>
			<result property="desc" column="roleDesc"/>
			<result property="createTime" column="roleCreateTime"/>
		</collection>
	</resultMap>
	
	<!-- 保存用户信息 -->
	<insert id="saveUser" parameterType="User" keyProperty="id">
		insert ignore into user (user_name,password,is_del,create_time,update_time) 
			values (#{userName},#{password},#{isDel},#{createTime},sysdate())
	</insert>

	<!-- 保存用户和角色之间的关系 -->
	<insert id="saveUserRoleRelation" parameterType="UserRoleRelation">
		insert into user_role_relation (user_id,role_id,create_time) values (#{user.id},#{role.id},sysdate())
	</insert>
	
	<!-- 根据id查询一个用户 -->
	<select id="getOneUserById" parameterType="int" resultMap="userMap">
		select * from user where id = #{id}
	</select>
	
	<!-- 根据id查询一个用户 -->
	<select id="getOneUserByName" parameterType="java.lang.String" resultMap="userMap">
		select * from user where user_name = #{userName}
	</select>
	
	<!-- 根据角色id查询用户和角色信息 -->
	<select id="queryUserJoinRole" parameterType="int" resultMap="userRoleMap">
		select u.id,u.user_name,u.password,u.is_del,u.create_time,u.update_time,
			r.id as roleId,r.name as roleName,r.ttype as roleType,
			r.ddesc as roleDesc,r.create_time as roleCreateTime
			from user u 
			left join user_role_relation urr on u.id = urr.user_id
			left join role r on urr.role_id = r.id
			where u.id = #{id}
	</select>

	<!-- 查询全部的用户 -->
	<select id="findAllUsers" resultMap="userMap">
		select * from user
	</select>

	<!-- String sql = "select 'Y' from dual where exists( select 'Y' from AACCOUNT where RROLE_ID = :role_id )";
	<select id="findAllUserByRoleId" >
		select 'Y' from dual where exists ( select 'Y' from user_role_relation urr where urr.role_id = #{roleId})
	</select>
	 -->

	<select id="findAllUserByRoleId" resultMap="userMap">
		select * from user u 
			left join user_role_relation urr on u.id = urr.user_id
			left join role r on urr.role_id = r.id
			where r.id = #{roleId}
	</select>
	
	<!-- 更新用户信息 -->
	<update id="updateUser" parameterType="User">
		update user
			<set>
				<if test="#{userName != null}">user_name = #{userName},</if>
				update_time = sysdate()
			</set>
			where id=#{id}
	</update>
	
	<!-- 批量删除用户角色关联关系 -->
	<delete id="multiDeleteUserRoleRelation" parameterType="java.lang.String">
		delete from user_role_relation where user_id in
		<foreach collection="array" item="idItem" open="(" separator="," close=")">
			#{idItem}
		</foreach>
	</delete>
	
	<!-- 批量删除用户 -->
	<delete id="multiDeleteUser" parameterType="java.lang.String">
		delete from user where id in
		<foreach collection="array" item="idItem" open="(" separator="," close=")">
			#{idItem}
		</foreach>
	</delete>

</mapper>


