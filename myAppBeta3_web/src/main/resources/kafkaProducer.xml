<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
						http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">


    <!-- 定义producer的参数 -->
    <bean id="producerProperties" class="java.util.HashMap">
        <constructor-arg>
            <map>
                <entry key="bootstrap.servers" value="localhost:9092"/>
                <!--<entry key="group.id" value="0"/>-->
                <!--如果请求失败，生产者也会自动重试，即使设置成0 the producer can automatically retry.-->
                <entry key="retries" value="1"/>
                <!--The "all" setting we have specified will result in blocking on the full commit of the record,
                the slowest but most durable setting.
                所有”设置将导致记录的完整提交阻塞，最慢的，但最持久的设置。-->
                <entry key="acks" value="all"/>
                <!--尝试重试指定topic分区的失败请求之前等待的时间。这样可以避免在某些故障情况下高频次的重复发送请求。100 long-->
                <entry key="retry.backoff.ms" value="100"/>
                <!--The producer maintains buffers of unsent records for each partition.-->
                <entry key="batch.size" value="16384"/>
                <!--默认立即发送，这里这是延时毫秒数-->
                <entry key="linger.ms" value="1"/>
                <!--生产者缓冲大小，当缓冲区耗尽后，额外的发送调用将被阻塞。时间超过max.block.ms将抛出TimeoutException-->
                <entry key="buffer.memory" value="33554432"/>
                <!--//The key.serializer and value.serializer instruct how to turn the key
                // and value objects the user provides with their ProducerRecord into bytes.-->
                <entry key="key.serializer"
                       value="org.apache.kafka.common.serialization.StringSerializer"/>
                <entry key="value.serializer"
                       value="org.apache.kafka.common.serialization.StringSerializer"/>
            </map>
        </constructor-arg>
    </bean>

    <!-- 创建kafkatemplate需要使用的producerfactory bean -->
    <bean id="producerFactory"
          class="org.springframework.kafka.core.DefaultKafkaProducerFactory">
        <constructor-arg>
            <ref bean="producerProperties"/>
        </constructor-arg>
    </bean>

    <!-- 创建kafkatemplate bean，使用的时候，只需要注入这个bean，即可使用template的send消息方法 -->
    <bean id="KafkaTemplate" class="org.springframework.kafka.core.KafkaTemplate">
        <constructor-arg ref="producerFactory"/>
        <constructor-arg name="autoFlush" value="true"/>
        <property name="defaultTopic" value="defaultTopic"/>
        <property name="producerListener" ref="producerListener"/>
    </bean>

    <bean id="producerListener" class="com.jr.kafka.producer.kafkaProducerListener"/>
</beans>